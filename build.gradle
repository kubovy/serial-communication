import org.apache.tools.ant.taskdefs.condition.Os

plugins {
    id 'org.jetbrains.kotlin.jvm'
    id 'maven-publish'
    id 'signing'
}

apply plugin: 'org.jetbrains.kotlin.jvm'

group 'com.poterion'
version '1.0-SNAPSHOT'

compileKotlin {
    kotlinOptions {
        freeCompilerArgs = ['-Xjsr305=strict']
        jvmTarget = '11'
    }
}

compileTestKotlin {
    kotlinOptions {
        freeCompilerArgs = ['-Xjsr305=strict']
        jvmTarget = '11'
    }
}

repositories {
    mavenCentral()
    jcenter()
    google()
    maven { url 'https://www.dcm4che.org/maven2/' }
}

dependencies {
    // Kotlin
    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.4.10'
    // Serial
    compile 'org.scream3r:jssc:2.8.0'
    // Bluetooth
    if (Os.isFamily(Os.FAMILY_MAC) || project.hasProperty('flavor') && project.flavor == 'macosx' ) {
        implementation files('libs/bluecove-2.1.2.jar')
    } else {
        implementation 'net.sf.bluecove:bluecove:2.1.0'
    }
    implementation 'net.sf.bluecove:bluecove-gpl:2.1.0'
    // Jackson
    implementation 'com.fasterxml.jackson.core:jackson-annotations:2.10.1'
    // Logging
    implementation 'org.slf4j:slf4j-api:1.7.30'
}

java {
    withJavadocJar()
    withSourcesJar()
}

javadoc {
    if(JavaVersion.current().isJava9Compatible()) {
        options.addBooleanOption('html5', true)
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            pom {
                name = 'Serial Communication'
                description = 'A library enabling to communicate with a peripheral device over a serial channel using binary messages.'
                url = 'https://github.com/kubovy/serial-communication'
                licenses {
                    license {
                        name = 'GNU Lesser General Public License v3.0'
                        url = 'https://www.gnu.org/licenses/lgpl-3.0.en.html'
                    }
                }
                developers {
                    developer {
                        id = 'kubovy'
                        name = 'Jan Kubovy'
                        email = 'jan@kubovy.eu'
                    }
                }
                scm {
                    connection = 'scm:git:https://github.com/kubovy/serial-communication.git'
                    developerConnection = 'scm:git:ssh://git@github.com:kubovy/serial-communication.git'
                    url = 'https://github.com/kubovy/serial-communication'
                }
            }
        }
    }
    repositories {
        maven {
            // change URLs to point to your repos, e.g. http://my.org/repo
            def releasesRepoUrl = "$buildDir/repos/releases"
            def snapshotsRepoUrl = "$buildDir/repos/snapshots"
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
        }
    }
}

signing {
    sign publishing.publications.mavenJava
}
